# Deploy Incredible Rust site with custom Rust static site generator
name: Deploy with Rust Generator

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
            
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
        
      - name: Build with Rust Generator
        run: |
          echo "ü¶Ä Building site with custom Rust generator"
          echo "Compiling Rust generator..."
          cargo build --release
          echo "Running site generation..."
          cargo run --release
          echo "Verifying output..."
          ls -la _site/
          echo "Site built successfully!"
        env:
          RUST_LOG: info
          
      - name: Verify .nojekyll exists
        run: |
          if [ -f "_site/.nojekyll" ]; then
            echo "‚úÖ .nojekyll file exists - Jekyll is disabled"
          else
            echo "‚ùå .nojekyll file missing - creating it"
            touch _site/.nojekyll
          fi
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4